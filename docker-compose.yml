version: '3.9'

services:
  frontend:
    build: ./frontend_service
    container_name: frontend
    env_file: ./frontend_service/.env
    ports:
      - "8080:8080"
    depends_on:
      - backend
    networks:
      - monitoring
  backend:
    build: ./backend_service
    container_name: backend
    env_file: ./backend_service/.env
    ports:
      - "3001:3001"
    networks:
      - monitoring
  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    ports:
      - "9100:9100"
    networks:
      - monitoring
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - monitoring
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - monitoring
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - monitoring
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    depends_on:
      - backend
      - frontend
  rabbitmq_exporter:
    image: kbudde/rabbitmq-exporter:latest
    container_name: rabbitmq_exporter
    ports:
      - "9419:9419"
    networks:
      - monitoring
    environment:
      RABBITMQ_EXPORTER_USERNAME: guest
      RABBITMQ_EXPORTER_PASSWORD: guest
      RABBITMQ_URL: http://rabbitmq:15672
    depends_on:
      - rabbitmq
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8081:8081"
    networks:
      - monitoring
volumes:
  grafana-data:

networks:
  monitoring:
    driver: bridge
